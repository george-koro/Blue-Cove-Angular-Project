@use "sass:list";


@mixin when-less($breakpoint) {

  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {

    // Prints a media query based on the value
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`, Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

/* You can add global styles to this file, and also import other style files */
$breakpoints: ("sm": 575px,
  "md": 767px,
  "lg": 991px,
  "xl": 1199px,
  "xxl": 1440px,
) !default;


// @media (min-width: 575px) and (max-width: 1900px) {
//   .ants-button {
//     font-size: calc(22px + (25 - 22) * ((100vw - 575px) / (1900 - 575)));
//   }
// }

@mixin responsive($fontrange, $size) {
  @media (min-width: list.nth($fontrange, 1)) and (max-width: list.nth($fontrange, -1)) {
    font-size: calc(list.nth($size, 1) + ((list.nth($size, -1) - list.nth($size, 1)) / 1px) * ((100vw - list.nth($fontrange, 1)) / ((list.nth($fontrange, -1) - list.nth($fontrange, 1)) / 1px)));
  }

  @media (min-width: list.nth($fontrange, -1)) {
    font-size: list.nth($size, -1);
  }

  @media (max-width: list.nth($fontrange, 1)) {
    font-size: list.nth($size, 1);
  }

}


/* Font size
   ========================================================================== */
$font-range: 575px 1900px;

$fontsize17: 17px 17px; //

$fontsize21: 19px 21px; //
$fontsize24: 19px 24px; //

$fontsize40: 25px 40px; //

$fontsize118: 50px 118px; //
$fontsize155: 70px 155px; //

@mixin font-size-17 {
  @include responsive($font-range, $fontsize17);
  line-height: 1.3;
}

@mixin font-size-21 {
  @include responsive($font-range, $fontsize21);
  line-height: 1.5;
}

@mixin font-size-24 {
  @include responsive($font-range, $fontsize24);
  line-height: 1.3;
}

@mixin font-size-40 {
  @include responsive($font-range, $fontsize40);
  line-height: 1;
}

@mixin font-size-118 {
  @include responsive($font-range, $fontsize118);
  line-height: 1;
}

@mixin font-size-155 {
  @include responsive($font-range, $fontsize155);
  line-height: 1;
}

/* Font weights
   ========================================================================== */

@mixin font-weight-thin() {
  font-weight: 200;
}

@mixin font-weight-light() {
  font-weight: 300;
}

@mixin font-weight-regular() {
  font-weight: 400;
}

@mixin font-weight-medium() {
  font-weight: 500;
}

@mixin font-weight-semibold() {
  font-weight: 600;
}

@mixin font-weight-bold() {
  font-weight: 700;
}

@mixin font-poppins {
  font-family: "Poppins", sans-serif;
}



/*----------  CONTAINERS  ----------*/

:root {
  --max-width-1: 157rem;
  --max-width-2: 138rem;

  --side-padding: 6rem;

  --section-space-1: 13rem;
  --section-space-3: 17rem;
}

.site-container {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  height: 100%;
}

section {
  position: relative;
}

/*----------  Section spaces  ----------*/
.section-space {
  padding-top: var(--section-space-3);
  padding-bottom: var(--section-space-3);
}

.section-space-top {
  padding-top: var(--section-space-3);
}

.section-space-bot {
  padding-bottom: var(--section-space-3);
}

.section-space-small {
  padding-top: var(--section-space-1);
  padding-bottom: var(--section-space-1);
}

.section-space-small-top {
  padding-top: var(--section-space-1);
}

.section-space-small-bot {
  padding-bottom: var(--section-space-1);
}

/*----------  max widths containers  ----------*/
.container-a {
  box-sizing: border-box;
  padding-left: var(--side-padding);
  padding-right: var(--side-padding);
  margin-left: auto;
  margin-right: auto;
  max-width: calc(var(--max-width-1) + var(--side-padding) + var(--side-padding));
  width: 100%;


  &.big-paddings {
    padding-left: var(--side-padding-2);
    padding-right: var(--side-padding-2);
    max-width: calc(var(--max-width-1) + var(--side-padding-2) + var(--side-padding-2));
  }

  @include when-less("lg") {
    &.big-paddings {
      padding-left: var(--side-padding);
      padding-right: var(--side-padding);
      max-width: calc(var(--max-width-1) + var(--side-padding) + var(--side-padding));
    }
  }
}

.container-b {
  box-sizing: border-box;
  padding-left: var(--side-padding);
  padding-right: var(--side-padding);
  margin-left: auto;
  margin-right: auto;
  max-width: calc(var(--max-width-2) + var(--side-padding) + var(--side-padding));
  width: 100%;

  &.big-paddings {
    padding-left: var(--side-padding-2);
    padding-right: var(--side-padding-2);
    max-width: calc(var(--max-width-2) + var(--side-padding-2) + var(--side-padding-2));
  }

  @include when-less("md") {
    &.big-paddings {
      padding-left: var(--side-padding);
      padding-right: var(--side-padding);
      max-width: calc(var(--max-width-2) + var(--side-padding) + var(--side-padding));
    }
  }
}

.container-c {
  box-sizing: border-box;
  padding-left: var(--side-padding);
  padding-right: var(--side-padding);
  margin-left: auto;
  margin-right: auto;
  max-width: calc(var(--max-width-3) + var(--side-padding) + var(--side-padding));
  width: 100%;

  &.big-paddings {
    padding-left: var(--side-padding-2);
    padding-right: var(--side-padding-2);
    max-width: calc(var(--max-width-3) + var(--side-padding-2) + var(--side-padding-2));
  }

  @include when-less("md") {
    &.big-paddings {
      padding-left: var(--side-padding);
      padding-right: var(--side-padding);
      max-width: calc(var(--max-width-3) + var(--side-padding) + var(--side-padding));
    }
  }
}

.container-d {
  box-sizing: border-box;
  padding-left: var(--side-padding);
  padding-right: var(--side-padding);
  margin-left: auto;
  margin-right: auto;
  max-width: calc(var(--max-width-4) + var(--side-padding) + var(--side-padding));
  width: 100%;

  &.big-paddings {
    padding-left: var(--side-padding-2);
    padding-right: var(--side-padding-2);
    max-width: calc(var(--max-width-4) + var(--side-padding-2) + var(--side-padding-2));
  }

  @include when-less("md") {
    &.big-paddings {
      padding-left: var(--side-padding);
      padding-right: var(--side-padding);
      max-width: calc(var(--max-width-4) + var(--side-padding) + var(--side-padding));
    }
  }
}

@include when-less("xl") {
  :root {
    --section-space-3: 7.5rem;
  }
}

@include when-less("md") {
  :root {
    --side-padding: 2.4rem;
    --section-space-3: 5.5rem;
  }
}

.no-padding-left {
  padding-left: 0;
}

.no-padding-right {
  padding-right: 0;
}

.no-paddings {
  padding-left: 0;
  padding-right: 0;
}


/* ---------- FONTS  ---------- */

@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap");
@import url("https://fonts.cdnfonts.com/css/ghakity");






html {
  font-size: 10px;
}

body {
  @include font-size-21;
  @include font-weight-regular;
  font-family: "Poppins", sans-serif;
}

h1,
h3 {
  @include font-size-118;
  @include font-weight-regular;
  font-family: "Ghakity", sans-serif;
  text-transform: uppercase;
}

h2 {
  @include font-size-155;
  @include font-weight-regular;
  font-family: "Ghakity", sans-serif;
  text-transform: uppercase;
}


/* ---------- GLOBAL  ---------- */
:root {
  --light-color: #f4f4f4;
  --light-2-color: #ffffff;

  --dark-color: #000000;
  --dark-2-color: #8b8b8b;
  --primary-color: #47ba02;
}

/* ----------  Colors  ---------- */
$light: var(--light-color);
$light-2: var(--light-2-color);
$dark: var(--dark-color);
$dark-2: var(--dark-2-color);
$primary: var(--primary-color);

/* ----------  transitions  ---------- */
$trans-easing: cubic-bezier(0.645, 0.045, 0.355, 1);
$trans-time1: 0.3s;
$trans-time2: 0.6s;
$trans-time3: 1.2s;
$trans: all $trans-time1 $trans-easing;
$trans2: all $trans-time2 $trans-easing;
$trans3: all $trans-time3 $trans-easing;

/* ----------  project specifics  ---------- */
html {
  scroll-behavior: smooth;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

body {
  background-color: $light-2;
  color: $dark;
  position: relative;
  min-height: 100vh;
  transition: $trans;
  margin: 0;
}

a {
  color: inherit;
}

img {
  max-width: 100%;
}

/* ----------  helper classes  ---------- */
.outline {
  outline: 1px solid red;
}

.cursor-pointer {
  cursor: pointer;
}

.animate {
  will-change: transform;
}

.hide-overflow {
  overflow: hidden;
}

.no-wrap {
  white-space: nowrap;
}

.img-fluid {
  max-width: 100%;
  height: auto;
}

.text-underline {
  text-decoration: underline;
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-uppercase {
  text-transform: uppercase;
}

ul {
  padding: 0;
  margin: 0;
}

h1,
h2,
h3 {
  margin: 0;
  padding: 0;
}

* {
  box-sizing: border-box;
  scroll-margin-top: 80px;
}

.js-map-holder {
  width: 100%;
  height: 100%;
}

.main-site {
  width: calc(100% - 350px);

  @include when-less("xxl") {
    width: calc(100% - 275px);
  }

  @include when-less("xl") {
    width: calc(100%);
  }
}

.section-starter {
  width: 100%;
  padding: 20px 30px;
  background-color: #ededed;
  @include font-size-40;
  text-transform: uppercase;
}

.read-more {
  @include font-weight-bold;
  text-decoration: underline;
  cursor: pointer;

  &-hidden {
    transition: $trans;
    overflow: hidden;
    max-height: 0;

    &.active {
      // max-height: 100%;
    }
  }
}

.date-sticky {
  width: 100%;
  position: sticky;
  top: -1px;
  padding: 20px 30px;
  background-color: #ededed;
  @include font-size-40;
  @include font-weight-light;
  text-transform: uppercase;
  z-index: 9000;

  &-container {
    position: relative;
    width: 100%;
  }
}

swiper-container {
  cursor: grab;
}
